{"version":3,"file":"scene.js","sources":["@traceur/generated/TemplateParser/6","scene.js","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["define($__placeholder__0, $__placeholder__1);","import {Sphere} from \"Sphere\";\nimport {HitPoint, Intersection} from \"Intersection\";\nimport {ReflectionType} from \"material\";\nimport {Color} from \"Color\";\nimport {V} from \"vector\";\n\n// レンダリングするシーンデータ\nconst spheres = [\n    new Sphere(1e5, V( 1e5+1, 40.8, 81.6), new Color(), new Color(0.75, 0.25, 0.25), ReflectionType.DIFFUSE), // 左\n    new Sphere(1e5, V(-1e5+99, 40.8, 81.6),new Color(), new Color(0.25, 0.25, 0.75), ReflectionType.DIFFUSE), // 右\n    new Sphere(1e5, V(50.0, 40.8, 1e5), new Color(), new Color(0.75, 0.75, 0.75), ReflectionType.DIFFUSE), // 奥\n    new Sphere(1e5, V(50.0, 40.8, -1e5+250), new Color(), new Color(), ReflectionType.DIFFUSE), // 手前\n    new Sphere(1e5, V(50.0, 1e5, 81.6), new Color(), new Color(0.75, 0.75, 0.75), ReflectionType.DIFFUSE), // 床\n    new Sphere(1e5, V(50.0, -1e5+81.6, 81.6),new Color(), new Color(0.75, 0.75, 0.75), ReflectionType.DIFFUSE), // 天井\n    new Sphere(20,  V(65.0, 20, 20), new Color(), new Color(0.25, 0.75, 0.25), ReflectionType.DIFFUSE), // 緑球\n    new Sphere(16.5,V(27.0, 16.5, 47), new Color(), new Color(0.99, 0.99, 0.99), ReflectionType.SPECULAR), // 鏡\n    new Sphere(16.5,V(77.0, 16.5, 78), new Color(), new Color(0.99, 0.99, 0.99), ReflectionType.REFRACTION), //ガラス\n    new Sphere(15.0,V(50.0, 90.0, 81.6), new Color(36.0,36.0,36.0), new Color(), ReflectionType.DIFFUSE) //照明\n];\n\n/**\n * 交差点を探す。\n * @returns {Intersection} 交差点オブジェクト。見つからなかった場合はnull。\n */\nexport function intersect_scene(ray) {\n    var object = void 0,\n        hitpoint = new HitPoint(Infinity, null, null),\n        object_id = -1;\n\n    // 線形探索(Kd-木を使った最適化が可能とのこと)\n    for (var i = 0, n = spheres.length; i < n; ++i) {\n        var newHitPoint = spheres[i].intersect(ray);\n        if (newHitPoint != void 0 &&\n            newHitPoint.distance < hitpoint.distance) {\n            hitpoint = newHitPoint;\n            object = spheres[i];\n            object_id = i;\n        }\n    }\n\n    if (object == void 0) {\n        return null;\n    } else {\n        return new Intersection(object, hitpoint);\n    }\n}\n","function($__placeholder__0) {\n      $__placeholder__1\n    }","if (!$__placeholder__0 || !$__placeholder__1.__esModule)\n            $__placeholder__2 = { 'default': $__placeholder__3 }","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}